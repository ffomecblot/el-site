
---
title: "Prévision hiérarchique à grande échelle"
date: 2024-10-01
categories: [Time Series, Forecasting, Public Sector]
image: ../images/ts-forecast.png
---

### Problème
Prévoir des séries **hiérarchiques** (n > 10k) multi-niveaux (national → région → département → établissement) pour fiabiliser le **pilotage budgétaire** et l’**anticipation RH**.

### Approche
- Réconciliation hiérarchique (bottom-up / MinT).
- Bench **ARIMA/ETS** vs modèles ML (ranger, xgboost) pour signaux irréguliers.
- Validation bloc-temps, métriques **MASE / sMAPE** par niveau hiérarchique.
- Surveillance du **drift** + réapprentissage programmé (mensuel).

### Résultats
- **−25 % d’erreur** moyenne (MASE) vs. système existant, stabilité supérieure sur niveaux infra.
- Déploiement batch (R) + rapport Quarto automatique pour les décideurs.

### Stack & Code (extrait)
- R : `fable`, `hts`, `fabletools`, `yardstick`, `targets`, `tarchetypes`
- _Snippet_ :
```r
library(fable)
fc <- df |>
  model(
    ets = ETS(value ~ error("A") + trend("A") + season("A"))
  ) |>
  forecast(h = "6 months")
```
- Pipeline `targets` ci-dessous.

### Pipeline (targets)
```r
# analysis/time-series/_targets.R
library(targets); library(tarchetypes)
source("analysis/time-series/R/funs_ts.R")

tar_option_set(packages = c("dplyr","readr","fable","fabletools","tsibble","yardstick"))

list(
  tar_target(raw_path, "data/ts_sample.csv", format = "file"),
  tar_target(ts_data, ts_read(raw_path)),
  tar_target(ts_split, ts_make_splits(ts_data)),
  tar_target(ts_fit, ts_train(ts_split)),
  tar_target(ts_fc, ts_forecast(ts_fit, h = 6)),
  tar_target(ts_metrics, ts_eval(ts_fc, ts_split))
)
```

### Liens
- Slides : (à venir) • Démo : (si public) • Rapport Quarto : (exemple à publier)
